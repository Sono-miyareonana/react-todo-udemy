#1.環境変数設定
REACT_APP_API_URL=http://localhost:8080

#2.prettierrcファイルに移動
#3.ターミナルで下記を実行
# npm i @tanstack/react-query@4.28.0
# npm i @tanstack/react-query-devtools@4.28.0
# npm i zustand@4.3.6
# npm i @heroicons/react@2.0.16
# npm i react-router-dom@6.10.0 axios@1.3.4

#4.ターミナルで下記を実行（tailwindcssのインストール）
# npm install -D tailwindcss
# npx tailwindcss init

# 5.index.cssファイルを下記に書き換える
# @tailwind base;
# @tailwind components;
# @tailwind utilities;

# 6.npm start
# ローカルサーバー起動

# 7.src>tyoes>index.tsファイルを作成
# 8.src>store>index.tsファイルを作成
# 9.index.tsxファイル
# import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
# import { ReactQueryDevtools } from '@tanstack/react-query-devtools'
# appcomponentをQueryClientProviderでラップ

# 10.src>components>Auth.tsx
# 11.src>componemts>Todo.tsx

# 12.App.tsx
# routerの設定
# csrf_tokenを読み込むための処理を追加{useEffect}
# ターミナルで 'npm start' を実行
# プラウざで 'http://localhost:3000/' を開き
# リロードすると、csrf_tokenが読み込まれていることを検証ツールで確認

# 13.src>hooks>useErrir.ts
# エラーメッセージをハンドリングするカスタムフックを作成

# 14.src>hooks>useMutateAuth.ts

# 10.Auth.tsx編集
# 11.Todo.tsx編集

# 12.動作確認
# react-todo > npm start
# go-rest-api > GO_ENV=dev go run main.go

# 15.useQuertTasks.tsファイルを作成
# 16.useMuteteTasks.tsファイルを作成
# 17.TaskItem.tsxファイルを作成
# 11.Todo.tsxファイルを編集

# 18.動作確認
# react-todo > npm start
# go-rest-api > GO_ENV=dev go run main.go

# 19.デプロイする
# go-rest-apiをgithubにpush
# リポジトリ初期化
# コミットメッセージを入力
# Create a new repository
# Repository nameを入力
# Create repositoryをクリック
# 以下の３行をコピーしてターミナルで実行
# git remote add origin https://github.com/Sono-miyareonana/go-rest-api.git
# git branch -M main
# git push -u origin main

# 20.BEをデプロイする
# render.comにgithubのアカウントでログイン
# new PostgresSQL をクリック
# name: 好きな名前でOK
# Region: singapore
# Instance Type: Free
# Create Databaseをクリック
# StatusがAvailableになるまで待つ
# 新しいタブでrender.comにログイン
# 右上のnewからWeb Serviceをクリック
# Conect a repositoryのリストからpushしたrepositoryを選択
# name: 好きな名前でOK
# Region: singapore
# Advenced
# Auto-Deploy: No
# Add Environment Variableに環境変数を追加（例:PORT 8080）
# Add Environment Variableをクリック
# POSTGRES_USERとvalueにUsernameをコピペしてを入力
# Add Environment Variableをクリック
# POST_PWとvalueにPasswordをコピペしてを入力
# Add Environment Variableをクリック
# POSTGRES_DBとvalueにDatabaseをコピペしてを入力
# Add Environment Variableをクリック
# POSTGRES_PORTとvalueにPortをコピペしてを入力
# Add Environment Variableをクリック
# POSTGRES_HOSTとvalueにHostをコピペしてを入力
# Add Environment Variableをクリック
# SECRETと入力しgenarateをクリック
# Add Environment Variableをクリック
# GO_ENVとvalueにproductionを入力
# Add Environment Variableをクリック
# API_DOMAINとvalueに（仮）localhostを入力
# Add Environment Variableをクリック
# FE_URLとvalueに（仮）http://localhost:3000 を入力
# Create Web Serviceをクリック
# Manual DeployからDeploy latest commitをクリック

# 21.フロントエンドをデプロイする











# 削除　App.css App.test.tsx



# index.cssでエラーが出た場合は、下記を実行
# vscodeの設定でtailwindcssのsettings.json編集を開き下記を追加
# 　（前のコードの最後にカンマ）,
# 　"css.lint.unknownAtRules": "ignore"　（これを追加）